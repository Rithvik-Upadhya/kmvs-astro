---
import singleGQL from '../../api/singleGQL';
import { Picture } from '@astrojs/image/components';
import { focusAreasQuery } from '../../../variables';
import PlaceholderImage from '../PlaceholderImage.astro';
import ScrollButtons from '../ScrollButtons.astro';

const strapi_url = import.meta.env.VITE_STRAPI_URL;

const focusAreasData = await singleGQL('focusAreas', focusAreasQuery);
const isLimited = focusAreasData.length < 4;
---

<section id='focusAreas'>
	<div class='container'>
		<div class='title-bar'>
			<h2>Focus Areas</h2>
			<ScrollButtons {isLimited} target='focusAreas' />
		</div>
		<div class='focusAreas scroll-container'>
			{
				focusAreasData.map(focusArea => {
					const {
						id,
						attributes: {
							name,
							excerpt,
							featuredImage: { data: imageData },
						},
					} = focusArea;
					const post_link = `/focus-areas/${id}`;
					return (
						<a class='focusArea bordered invert' href={post_link}>
							{false && (
								<img
									class='border'
									src='/images/decor/border_1.png'
									alt=''
								/>
							)}
							<div class='card'>
								{imageData ? (
									<Picture
										class='featuredImage'
										src={
											strapi_url +
											imageData.attributes.url
										}
										alt={
											imageData.attributes
												.alternativeText || ''
										}
										widths={[375]}
										aspectRatio={3 / 2}
										formats={['webp', 'avif']}
									/>
								) : (
									<PlaceholderImage />
								)}
								<div class='content'>
									<h3 title={name} class='lc_2'>
										{name}
									</h3>
									<hr />
									<p class='excerpt lc_4'>{excerpt}</p>
								</div>
								<p class='read-more'>
									Read More
									<img src='/images/decor/arrow.png' alt='' />
								</p>
							</div>
						</a>
					);
				})
			}
		</div>
	</div>
</section>

<style lang='less'>
	@import '../../styles/variables.less';
	section#focusAreas {
		overflow: hidden;
		background-color: var(--accentC3);
		position: relative;
		padding-top: 100px;
		padding-bottom: 100px;
		&::before {
			position: absolute;
			content: '';
			background-image: url('/images/decor/separator_2.svg');
			background-repeat: repeat-x;
			background-size: 26px;
			filter: var(--accentC1Filter);
			width: 100%;
			height: 30px;
			top: 4px;
		}
		&::after {
			position: absolute;
			content: '';
			background-image: url('/images/decor/separator_1.svg');
			background-repeat: repeat-x;
			background-size: 26px;
			filter: var(--accentC2Filter);
			width: 100%;
			height: 20px;
			bottom: 3px;
		}
		.container {
			.title-bar {
				display: grid;
				grid-template-columns: repeat(2, auto);
				gap: 25px;
				margin-bottom: 50px;
				@media @s-nd {
					grid-template-columns: 1fr;
				}
				h2 {
					color: var(--textC2);
					font-size: 2em;
				}
			}
			.focusAreas {
				--cardWidth: 330px;
				scroll-behavior: smooth;
				display: grid;
				grid-template-columns: repeat(
					auto-fit,
					var(--cardWidth)
				) !important;
				grid-template-rows: 1fr;
				grid-auto-flow: column !important;
				gap: calc(var(--cardWidth) / 10);
				overflow-x: auto;
				overflow-y: hidden;
				padding-left: 150px;
				padding-right: 150px;
				padding-bottom: 25px;
				width: calc(100% + 300px);
				transform: translateX(-150px);
				.focusArea {
					display: block;
					width: var(--cardWidth);
					height: calc(var(--cardWidth) * 1.638);
					position: relative;
					&.bordered::before {
						--accentFilter: var(--primaryFilter);
						--opacity: 0.4;
					}
					.card {
						width: 100%;
						height: 100%;
						border-radius: var(--bdRadius);
						overflow: hidden;
						position: relative;
						background-color: var(--primaryC);
						.featuredImage {
							display: block;
							width: 100%;
							// ie. (cardWidth - 2x padding) * 2/3
							height: calc(var(--cardWidth) * 0.67 - 42px);
							object-fit: cover;
						}
						.content {
							padding: 20px 20px 60px 20px;
							color: var(--textC1);
							background-color: var(--primaryC);
							transition: transform 0.3s ease;
							h3 {
								font-size: 1.3em;
							}
							hr {
								height: 2px;
								background-color: var(--textC1);
								opacity: 0.3;
								border: none;
								margin: 20px 0;
							}
							.excerpt {
								margin-bottom: 10px;
								transition: height 0.3s ease;
							}
						}
						.read-more {
							font-weight: 500;
							display: flex;
							align-items: center;
							position: absolute;
							bottom: 20px;
							left: 20px;
							color: var(--textC1);
							img {
								width: 25px;
								height: 13px;
								margin-left: 8px;
								filter: var(--secondaryFilter);
							}
						}
					}
					&:hover,
					&:focus {
						.card {
							.content {
								transform: translateY(
									calc(-2 * var(--lineHeight))
								);
								.excerpt {
									height: calc(6 * var(--lineHeight));
									-webkit-line-clamp: 6;
								}
							}
						}
					}
				}
			}
		}
	}
	html[style='--fontSize: 20px;']
		section#focusAreas
		.container
		.focusAreas
		.focusArea,
	html[style='--fontSize: 22px;']
		section#focusAreas
		.container
		.focusAreas
		.focusArea {
		.card .content .excerpt {
			height: calc(3 * var(--lineHeight));
			-webkit-line-clamp: 3;
		}
		&:hover,
		&:focus {
			.card .content .excerpt {
				height: calc(5 * var(--lineHeight));
				-webkit-line-clamp: 5;
			}
		}
	}
	html[style='--fontSize: 24px;']
		section#focusAreas
		.container
		.focusAreas
		.focusArea {
		.card .content .excerpt {
			height: calc(2 * var(--lineHeight));
			-webkit-line-clamp: 2;
		}
		&:hover,
		&:focus {
			.card .content .excerpt {
				height: calc(4 * var(--lineHeight));
				-webkit-line-clamp: 4;
			}
		}
	}
</style>
