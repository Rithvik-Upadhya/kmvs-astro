---
import { Picture } from '@astrojs/image/components';
import PlaceholderImage from '../PlaceholderImage.astro';
import ScrollButtons from '../ScrollButtons.astro';

export interface Props {
	title: string;
	timeline: Array<any>;
}

const { title, timeline } = Astro.props;

const strapi_url = import.meta.env.VITE_STRAPI_URL;

// used to ensure that scroll buttons appear only on tablet and mobile when there are less than 4 items
const isLimited = timeline.length < 4;
---

<section id='timeline'>
	<div class='container'>
		<div class='title-bar'>
			<h2>{title}</h2>
			<ScrollButtons {isLimited} target='timeline' />
		</div>
		<div class='timeline scroll-container'>
			{
				timeline.map(event => {
					const {
						year,
						title,
						description,
						image: { data: imageData },
					} = event;
					return (
						<div class='event'>
							<div class='card'>
								<div class='image'>
									<img
										class='border'
										src='/images/decor/border_2.png'
										alt=''
									/>
									{imageData ? (
										<Picture
											class='featured-image'
											src={
												strapi_url +
												imageData.attributes.url
											}
											alt={
												imageData.attributes
													.alternativeText || ''
											}
											widths={[375]}
											aspectRatio={3 / 2}
											formats={['webp', 'avif']}
										/>
									) : (
										<PlaceholderImage class='featured-image' />
									)}
								</div>
								<div class='content'>
									<p class='year'>{year}</p>
									<h3 {title}>{title}</h3>
									<p class='description'>{description}</p>
									{event.button && (
										<a
											class='button arrow'
											href={event.button.link}
											target='_blank'>
											{event.button.label}
											<img
												src='/images/decor/arrow.png'
												alt=''
												role='presentation'
											/>
										</a>
									)}
								</div>
							</div>
						</div>
					);
				})
			}
		</div>
	</div>
	<img class='foliage_1' src='/images/decor/foliage_1.png' alt='' />
</section>

<style lang='less'>
	@import '../../styles/variables.less';
	section#timeline {
		--accentC: var(--accentC2);
		--accentCFilter: var(--accentC2Filter);
		overflow: hidden;
		background-color: var(--accentC2);
		position: relative;
		padding-top: 100px;
		padding-bottom: 200px;
		&::before {
			position: absolute;
			content: '';
			background-image: url('/images/decor/separator_2.svg');
			background-repeat: repeat-x;
			background-size: 26px;
			filter: var(--accentC3Filter);
			width: 100%;
			height: 30px;
			top: 4px;
		}
		&::after {
			position: absolute;
			content: '';
			background-image: url('/images/decor/separator_1.svg');
			background-repeat: repeat-x;
			background-size: 26px;
			filter: var(--secondaryFilter);
			width: 100%;
			height: 20px;
			bottom: 3px;
		}
		.container {
			.title-bar {
				display: grid;
				grid-template-columns: repeat(2, auto);
				gap: 25px;
				margin-bottom: 50px;
				@media @s-nd {
					grid-template-columns: 1fr;
				}
				h2 {
					color: var(--textC2);
					font-size: 2em;
				}
			}
			.timeline {
				scroll-behavior: smooth;
				--cardWidth: 320px;
				display: grid;
				grid-template-columns: repeat(
					auto-fit,
					var(--cardWidth)
				) !important;
				grid-template-rows: 1fr;
				grid-auto-flow: column !important;
				gap: calc(var(--cardWidth) / 5);
				overflow-x: auto;
				overflow-y: hidden;
				padding-left: 150px;
				padding-right: 150px;
				width: calc(100% + 300px);
				transform: translateX(-150px);
				.event {
					display: block;
					width: var(--cardWidth);
					.card {
						width: 100%;
						overflow: hidden;
						.image {
							position: relative;
							padding: 0 27px 27px 0;
							margin-bottom: 25px;
							height: calc(var(--cardWidth) * 0.7);
							.featured-image {
								display: block;
								width: 100%;
								height: calc(var(--cardWidth) * 0.666 - 18px);
								border-radius: var(--bdRadius);
							}
							.border {
								position: absolute;
								bottom: 0;
								right: 0;
								filter: var(--primaryFilter);
								width: 100%;
							}
						}
						.content {
							position: relative;
							color: var(--textC2);
							display: flex;
							flex-direction: column;
							gap: 15px;
							margin-bottom: 25px;
							.year {
								font-size: 1.15em;
							}
							h3 {
								font-size: 1.3em;
							}
							.description {
								line-height: 1.4em;
							}
							.button {
								width: max-content;
								--accentC: var(--primaryC);
								--bgC: var(--accentC2);
								--accentFilter: var(--primaryFilter);
								--bgFilter: var(--accentC2Filter);
							}
						}
					}
				}
			}
		}
		.foliage_1 {
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
			margin: 0 auto;
			max-width: 1100px;
			filter: var(--primaryFilter);
		}
	}
</style>
