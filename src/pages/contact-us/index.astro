---
import PageLayout from '../../layouts/PageLayout.astro';
import Input from '../../components/global/Input.astro';
import { contactDetailsQuery } from '../../../variables';
import singleGQL from '../../api/singleGQL';
import slugify from '../../utils/slugify';
import toTitleCase from '../../utils/toTitleCase';

const contactDetailsData = await singleGQL('siteDetail', contactDetailsQuery);

const {
	attributes: { socials, contactDetails },
} = contactDetailsData;

// creates an object arrays like { phone: [...], email: [...] }
const groupedContactDetails = contactDetails.reduce((result, item) => {
	(result[item.type] = result[item.type] || []).push(item);
	return result;
}, {});

// converts it into an array of arrays like [ [...], [...] ] that can be looped over without knowing the key values
const contactDetailsArrays: Array<any> = Object.values(groupedContactDetails);
---

<PageLayout title={'Contact Us'} classes={['contact-us']}>
	<section>
		<div class='container'>
			<div id='contactForm'>
				<form
					name='contact'
					method='POST'
					action='/contact-us/success'
					data-netlify='true'
					netlify-honeypot='first-name'>
					<Input
						class='screen-reader-text'
						id='first-name'
						label="Don't fill this out if you're human"
					/>
					<div class='form-row'>
						<Input id='name' label='Name' wrap required />
						<Input
							type='email'
							id='email'
							label='Email'
							wrap
							required
						/>
						<Input id='organisation' label='Organisation' wrap />
					</div>
					<div class='form-row'>
						<Input
							type='select'
							id='regarding'
							label='What is this Regarding?'
							options={[
								'Collaboration',
								'Feedback',
								'Work Opportunity',
								'Donation',
								'General Enquiry',
								'Other',
							]}
						/>
						<Input
							type='select'
							id='source'
							label='How did you hear about us?'
							options={[
								'Social Media',
								'Search Engine',
								'Friends / Family',
								'Another Organisation',
								'Other Source',
							]}
						/>
					</div>
					<Input type='textarea' id='query' label='Query' required />
					<Input
						type='checkbox'
						id='consent'
						label='I consent to being contacted about my query'
						required
					/>
					<div class='form-group'>
						<input
							type='submit'
							id='submit'
							value='Submit'
							class='button'
						/>
					</div>
				</form>
				<div class='contact-details'>
					<h2>Contact Details</h2>
					<div class='wrapper'>
						{
							contactDetailsArrays.map(contactDetailsArray => (
								<div
									class={slugify(
										contactDetailsArray[0].type
									)}>
									<p class='sub-head'>
										{toTitleCase(
											contactDetailsArray[0].type
										)}
									</p>

									{contactDetailsArray.map(
										contactDetailsObject => (
											<p>{contactDetailsObject.detail}</p>
										)
									)}
								</div>
							))
						}
						<div class='socials'>
							<p class='sub-head'>Social Media</p>
							{
								socials.map(social => (
									<a
										class='social'
										href={social.link}
										title={social.type}>
										<img
											src={`/images/icons/${slugify(
												social.type
											)}.svg`}
											alt={`${social.type} icon`}
										/>
									</a>
								))
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</PageLayout>

<style lang='less'>
	section {
		.container {
			#contactForm {
				margin: 0 auto;
				max-width: 700px;
				padding: 50px 25px;
				border-radius: var(--bdRadius);
				background-color: var(--lightPrimaryC);
				form {
					width: 100%;
					display: flex;
					flex-direction: column;
					gap: 25px;
					.form-row {
						display: grid;
						grid-gap: 25px 50px;
						grid-template-columns: repeat(
							auto-fit,
							minmax(250px, 1fr)
						);
					}
					input[type='submit'] {
						--bgC: var(--lightPrimaryC);
						--accentC: var(--accentC2);
					}
				}
				.contact-details {
					margin-top: 75px;
					h2 {
						margin-bottom: 20px;
					}
					.wrapper {
						display: grid;
						grid-template-columns: repeat(
							auto-fill,
							minmax(200px, 280px)
						);
						gap: 40px 60px;
						.socials {
							a.social {
								display: inline-block;
								margin-right: 8px;

								img {
									width: 30px;
									filter: none;
								}

								&:hover,
								&:focus {
									img {
										filter: var(--accentC1Filter);
									}
								}
							}
						}
					}
					.sub-head {
						margin-bottom: 5px;
					}
				}
			}
		}
	}
</style>
